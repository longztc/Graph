@import "../../Definitions/Common.d.less";
@import "ChartBase.less";

.azc-chart {
    path {
        stroke-width: 2;
    }

    svg g.azc-lineChart-series path {
        fill: none !important;
    }

    .azc-chart-noDataMessage {
        text-anchor: middle;
    }

    text-rendering: optimizeLegibility; // for rotated text
    .azc-chart-view-line {
        .azc-chart-lineStyleSolid {
            fill: none;
            stroke-dasharray: none;
            transition: opacity .20s ease-in-out;
        }

        .azc-chart-lineStyleDotted {
            stroke-dasharray: 3, 3;
        }

        .azc-chart-lineStyleDashed {
            stroke-dasharray: 10, 5;
        }

        .azc-chart-lineStyleWarningThreshold {
            stroke-width: 1px;
            stroke-dasharray: 3, 3;
        }

        .azc-chart-lineStyleUsageThreshold {
            stroke-width: 1px;
        }

        .azc-chart-lineStyleTrendline {
            stroke-width: 2px;
            opacity: 0.7;
            stroke-dasharray: 4, 4;
        }

        .azc-chart-callout {
            text-anchor: middle;
        }

        .azc-chart-tooltip-circle {
            fill: none;
            stroke: none;
        }
    }

    .azc-chart-view-area {
        fill-opacity: 0.6;

        path {
            stroke-width: 0;
            transition: opacity .20s ease-in-out;
        }

        pattern.azc-hatchingPatternStyle {
            fill: none;
            stroke: #f4f5f6 !important;

            rect {
                stroke-width: 0;
            }

            path {
                stroke-width: 1;
            }
        }

        .azc-chart-callout {
            text-anchor: middle;
        }

        .azc-chart-tooltip-circle {
            fill: none;
            stroke: none;
        }
    }

    .azc-chart-view-scatter {
        .azc-chart-tooltip-circle {
            fill: none;
            stroke: none;
        }

        .azc-chart-callout {
            text-anchor: middle;
        }

        .azc-chart-hovered-circle {
            opacity: 0.4;
        }

        .azc-chart-selected-circle {
            opacity: 0.2;
        }
    }

    .azc-chart-view-bar {
        /* TODO guruk: implement the split bar chart using thresholds. This was you can get rid of those positive and negative constants. */
        .azc-barChart-series {
            .azc-barChart-bar-positive {
                fill: #4682b4 !important;
                stroke: #4682b4 !important;
            }

            .azc-barChart-bar-negative {
                fill: #ff0000 !important;
                stroke: #ff0000 !important;
            }

            rect {
                transition: opacity .20s ease-in-out;
            }
        }
    }

    /* Stacked area chart */
    .azc-chart-view-stackedArea {
        pattern.azc-hatchingPatternStyle {
            fill: none;
            stroke: #f4f5f6 !important;

            rect {
                stroke-width: 0;
            }

            path {
                stroke-width: 1;
            }
        }

        .azc-stackedAreaChart-series {
            .azc-svg-style-fill {
                opacity: 1;
            }

            path {
                stroke-width: 0;
            }

            &.azc-stackedAreaChart-not-selected {
                .azc-svg-style-fill {
                    opacity: 0.15;
                    transition: opacity .20s ease-in-out;
                }

                &.azc-chart-series-selected,
                &.azc-chart-series-hovered {
                    .azc-svg-style-fill {
                        opacity: .8;
                    }
                }
            }
        }

        .azc-stackedLineChart-series {
            path.azc-svg-style-fill {
                stroke-width: 2px;
                fill: none;
                opacity: 1;
            }

            &.azc-chart-series-hovered,
            &.azc-chart-series-selected {
                .azc-svg-style-fill {
                    stroke-width: 3px;
                }
            }

            &.azc-stackedAreaChart-not-selected {
                path.azc-svg-style-fill,
                circle,
                circle.azc-chart-hovered-circle {
                    opacity: .3;
                    transition: opacity .20s ease-in-out;
                }

                &.azc-chart-series-selected,
                &.azc-chart-series-hovered {
                    .azc-svg-style-fill {
                        opacity: .8;
                    }
                }
            }
        }
        
        .azc-chart-series-selected {
            .azc-svg-style-fill {
                opacity: 1;
            }
        }

        .azc-chart-series-hovered {
            .azc-svg-style-fill {
                opacity: .8;
            }
        }
    }

    /*
     * Selection and Hover Styles
     *
     * azc-chart-hovered            Added chart root when hovering over something in the chart.
     * azc-chart-selected           Added to chart root when there is a selection within the chart.
     * azc-chart-series-hovered     Added to the series when hovering over it.
     * azc-chart-series-selected    Added to the series when it is selected.
     * azc-chart-item-hovered       (NYI) Added to the item when hovering over it.
     * azc-chart-item-selected      (NYI) Added to the item when it is selected.
     */
    &.azc-chart-hovered,
    &.azc-chart-selected {
        .azc-chart-view-bar {
            .azc-barChart-series:not(.azc-chart-series-selected):not(.azc-chart-series-hovered) {
                rect {
                    opacity: 0.3;

                    &.azc-chart-item-hovered,
                    &.azc-chart-item-selected {
                        opacity: 1;
                    }
                }
            }
        }

        .azc-chart-view-area {
            .azc-areaChart-series:not(.azc-chart-series-selected):not(.azc-chart-series-hovered) {
                .azc-svg-style-fill {
                    fill-opacity: 0.3;
                }
            }

            .azc-areaChart-series.azc-chart-series-selected,
            .azc-areaChart-series.azc-chart-series-hovered {
                .azc-svg-style-fill {
                    fill-opacity: 1;
                }
            }
        }
    }

    &.azc-chart-hovered {
        .azc-chart-view-line {
            transition: opacity 0.3s;

            .azc-lineChart-series.azc-chart-series-hovered {
                path {
                    stroke-width: 3px;
                }

                .azc-chart-series-hovered-projection {
                    pointer-events: none;
                    stroke-width: 2px;
                    opacity: 0.4;
                }

                .azc-svg-style-stroke {
                    opacity: 1;
                }
            }
        }
    }

    &.azc-chart-selected {
        .azc-chart-view-line {
            transition: opacity 0.3s;

            .azc-lineChart-series:not(.azc-chart-series-selected):not(.azc-chart-series-hovered) {
                circle,
                .azc-svg-style-stroke {
                    opacity: 0.3;
                }
            }
        }
    }

    .azc-chart-y-axis-slice {
        stroke-width: 2px;
        pointer-events: none;
        opacity: 0.2;
    }

    &.azc-chart-noninteractive, .azc-chart-noninteractive {
        pointer-events: none !important;
    }

    .azc-chart-data:not(.azc-chart-noninteractive) {
        .azc-chart-view-line {
            path {
                pointer-events: stroke;
            }

            .azc-chart-selected-circle,
            .azc-chart-hovered-circle {
                pointer-events: all;
            }
        }

        .azc-chart-view-area {
            path {
                pointer-events: fill;
            }
        }

        .azc-chart-view-scatter {
            .azc-chart-hovered-circle {
                pointer-events: all;
            }

            .azc-chart-selected-circle {
                pointer-events: all;
            }
        }
        /* Stacked area chart */
        .azc-chart-view-stackedArea {

            .azc-stackedAreaChart-series {
                path {
                    pointer-events: fill;
                }
            }

            .azc-stackedLineChart-series {
                path.azc-svg-style-fill {
                    pointer-events: stroke;
                }

                .azc-chart-selected-circle,
                .azc-chart-hovered-circle {
                    pointer-events: all;
                }
            }
        }
    }
}